
services:
  # PostgreSQL 数据库服务
  # 注意: 如果您想使用服务器上已有的共享 PostgreSQL 容器，
  # 可以注释掉整个 postgres 服务配置，并在 fastify 和 shadcn-next 服务中
  # 将 POSTGRES_HOST 环境变量指向该共享容器的主机名或 IP
  postgres:
    image: postgres:17-alpine
    container_name: fastify-postgres-17
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      # 使用项目特定的卷名称，避免与其他项目冲突
      - pg-17-data:/var/lib/postgresql/data
      # 初始化脚本目录，可以放置 .sql 文件进行初始化
      - ./db_init_scripts:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fastify-network

  # Fastify 后端服务
  fastify:
    build:
      context: .
      dockerfile: services/fastify/Dockerfile
    container_name: fastify-service
    restart: unless-stopped
    ports:
      - '${EXPORT_FASTIFY_PORT:-4000}:3100'
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3100
      # API 前缀配置（生产环境使用 /fastify，开发环境留空）
      - API_PREFIX=${API_PREFIX:-/fastify}
      # 数据库连接配置
      - DATABASE_URL=${FASTIFY_DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/fastify_db}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      # 阿里百炼密钥
      - DASHSCOPE_API_KEY=${DASHSCOPE_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fastify-network

  # Next.js 前端服务
  shadcn-next:
    build:
      context: .
      dockerfile: packages/shadcn-next/Dockerfile
      args:
        NEXT_PUBLIC_BASE_PATH: /next
        NEXT_PUBLIC_API_URL: ${API_PREFIX:-/fastify}
        NEXT_PUBLIC_FAST_API_URL: https://poc.new-see.com:88
        NEXT_PUBLIC_FAST_API_KEY: ${NEXT_PUBLIC_FAST_API_KEY:-your_fastapi_key}
    container_name: shadcn-next
    restart: unless-stopped
    ports:
      - '${EXPORT_NEXT_PORT:-4001}:3200'
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - SERVER_FASTIFY_API=${SERVER_FASTIFY_API:-http://fastify:3100}
      # 数据库连接配置
      - DATABASE_URL=${NEXT_DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/shadcn_next}
      - JWT_SECRET=${JWT_SECRET:?JWT_SECRET is required}
      - JIRA_USER=${JIRA_USER:?JIRA_USER is required}
      - JIRA_PASSWORD=${JIRA_PASSWORD:?JIRA_PASSWORD is required}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      # 邮箱服务
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_SECURE=${SMTP_SECURE}
    depends_on:
      - postgres
      - fastify
    networks:
      - fastify-network

# 使用项目特定的卷名称，避免与其他项目冲突
volumes:
  pg-17-data:
    # 如果需要使用外部卷（如共享给其他项目），可以添加 external: true
    # external: true

# 网络配置
# 如果需要连接到外部网络（如共享的 PostgreSQL 容器所在的网络），可以添加 external: true
networks:
  fastify-network:
    driver: bridge
    # external: true
